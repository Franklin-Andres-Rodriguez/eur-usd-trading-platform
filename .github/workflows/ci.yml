name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  
permissions:
  contents: read
  security-events: write
  actions: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 🧪 Testing y Quality Gates
  test:
    name: 🧪 Quality Checks
    runs-on: ubuntu-24.04-arm64  # ARM64 para eficiencia de costos (37% más barato)
    
    strategy:
      matrix:
        browser: [chrome, firefox]
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: 📦 Install dependencies
      run: |
        npm ci --prefer-offline --no-audit
        npm list --depth=0
        
    - name: 🎨 Lint code
      run: |
        npx eslint src/ --format=github
        npx prettier --check .
        
    - name: 🧪 Validate HTML
      run: npx html-validate index.html
      
    - name: ⚡ Test build
      run: npm run build
      
    - name: 📊 Bundle size analysis
      uses: preactjs/compressed-size-action@v2
      if: github.event_name == 'pull_request'
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        pattern: "dist/**/*.{js,css,html}"

  # 🔒 Security scanning con características 2024
  security:
    name: 🔒 Security Analysis
    runs-on: ubuntu-24.04-arm64
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        config: |
          paths-ignore:
            - "**/*.test.js"
            - "**/node_modules/**"
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        upload: true
        
    - name: 🔒 Run Semgrep Security Scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten
          p/javascript
          
    - name: 📦 NPM Security Audit
      run: |
        npm audit --audit-level=high --production
        
    - name: 🔍 Check for API keys in code
      run: |
        if grep -r "sk-" src/ || grep -r "API.*KEY.*=" src/ --exclude="*.example.*"; then
          echo "❌ Potential API keys found in source code!"
          exit 1
        fi
        echo "✅ No hardcoded API keys detected"

  # 🏗️ Build y Deploy
  build-deploy:
    name: 🏗️ Build & Deploy
    needs: [test, security]
    runs-on: ubuntu-24.04-arm64
    
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci --prefer-offline --no-audit
      
    - name: 🏗️ Build production
      run: |
        npm run build
        # Optimizar imágenes si las hay
        if [ -d "assets/images" ]; then
          npx imagemin assets/images/* --out-dir=dist/images
        fi
      env:
        NODE_ENV: production
        
    - name: 📊 Lighthouse CI Analysis
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: '.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true
        
    - name: 🔧 Setup GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: 📤 Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # 📊 Performance Monitoring
  performance:
    name: 📊 Performance Check
    needs: [build-deploy]
    runs-on: ubuntu-24.04-arm64
    
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ⚡ Web Vitals Check
      run: |
        npx unlighthouse-ci \
          --site https://franklin-andres-rodriguez.github.io/eur-usd-trading-platform \
          --budget 95 \
          --reporter json,html
      continue-on-error: true
      
    - name: 📊 Upload performance report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-report
        path: unlighthouse-reports/
        retention-days: 30
